generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  CREATOR
  ADMIN
  ELEVATED_USER
}

enum SourceType {
  URL
  UPLOAD
}

enum CloudProvider {
  AWS
  GCP
  AZURE
}

enum DeploymentStatus {
  PENDING
  NOTDEPLOYED
  INITIATED
  DEPLOYING
  RUNNING
  FAILED
  STOPPED
}

model User {
  id        String   @id @default(cuid())
  clerkId   String   @unique
  email     String   @unique
  role      UserRole @default(USER)
  creator   Creator?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Creator {
  id                 String   @id @default(cuid())
  userId             String   @unique
  user               User     @relation(fields: [userId], references: [id])
  experienceLevel    String
  specialization     String[]
  aiFrameworks       String[]
  modelTypes         String[]
  developmentGoals   String
  projectDescription String
  portfolioUrl       String?
  githubUrl          String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model Model {
  id          String       @id @default(cuid())
  name        String       @unique
  description String
  modelType   String
  license     String
  sourceType  SourceType
  url         String? // Optional URL for Hugging Face models
  tags        String[] // Tags as array of strings
  revision    String? // Optional model revision (e.g., 'main')
  parameters  Float // Number of parameters in billions
  customScript String? // Base64 encoded custom script
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  Deployment  Deployment[]
}

model Deployment {
  id            String   @id @default(cuid())
  modelId       String
  model         Model    @relation(fields: [modelId], references: [id])
  status        String
  deploymentUrl String?
  apiKey        String?
  gpuType       String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
